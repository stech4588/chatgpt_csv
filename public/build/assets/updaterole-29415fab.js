import{_ as x,r as h,o as n,c as a,a as s,t as l,w as C,b as f,v,n as b,d,F as k,j as y,k as R}from"./app-8617d8f9.js";const S={name:"Update",inject:["authStore"],data(){return{form:new this.$form({name:"",description:"",permission_id:[]}),permissions:{},updatedSuccessful:!1,roleUpdate:!1,loading:!0}},computed:{propNames(){return Object.keys(this.permissions)}},async mounted(){if(this.authStore.user===null)this.loading=!1;else try{const t=["roleUpdate"],o=await checkPermissions(t);t.forEach(r=>{o[r]&&(this[r]=!0,r==="roleUpdate"&&(this.loading=!1))}),await this.$axios.get(`/api/role/${this.$route.params.id}`).then(r=>{this.form.name=r.data.data.name,this.form.description=r.data.data.description,this.form.permission_id=r.data.data.permissions.map(_=>_.id)}),await this.$axios.get("/api/permission?groupBy=true").then(r=>{this.permissions=r.data.data})}catch(t){handleError(t,this.$toast)}},methods:{async updateRole(){try{const{data:t}=await this.form.put(`/api/role/${this.$route.params.id}`);t.status===200&&(this.$toast.success("Role updated successfully.",{position:"top-right",duration:3e3}),this.$router.push("/role"))}catch(t){handleError(t,this.$toast)}}}},V={key:0},z={key:0},B={class:"row"},E={class:"col-lg-12 m-auto"},N={class:"mb-3 row"},j=s("label",{class:"col-md-3 col-form-label text-md-end"},l("Name"),-1),D={class:"col-md-7"},L={class:"mb-3 row"},M=s("label",{class:"col-md-3 col-form-label text-md-end"},l("Description"),-1),q={class:"col-md-7"},F={class:"mb-3 row"},K=s("h5",{class:"col-md-3 text-md-end"},l("Select Permissions"),-1),P={class:"col-md-9"},T={class:"row"},O={class:"text-capitalize"},A={class:"form-check"},G=["id","value"],H=["for"],I={class:"mb-3 row"},J={class:"col-md-7 offset-md-3 d-flex"},Q=["disabled"],W={key:1},X={key:1};function Y(t,o,r,_,e,m){const c=h("has-error"),w=h("Unauthorized"),g=h("Loader");return e.loading===!1?(n(),a("div",V,[e.roleUpdate===!0?(n(),a("div",z,[s("h1",null," Update Role "+l(t.$route.params.id),1),s("div",B,[s("div",E,[s("form",{onSubmit:o[4]||(o[4]=C((...i)=>m.updateRole&&m.updateRole(...i),["prevent"])),onKeydown:o[5]||(o[5]=i=>e.form.onKeydown(i))},[s("div",N,[j,s("div",D,[f(s("input",{"onUpdate:modelValue":o[0]||(o[0]=i=>e.form.name=i),class:b([{"is-invalid":e.form.errors.has("name")},"form-control"]),type:"text",name:"name",required:""},null,2),[[v,e.form.name]]),d(c,{form:e.form,field:"name"},null,8,["form"])])]),s("div",L,[M,s("div",q,[f(s("input",{"onUpdate:modelValue":o[1]||(o[1]=i=>e.form.description=i),class:b([{"is-invalid":e.form.errors.has("description")},"form-control"]),type:"text",name:"description",required:""},null,2),[[v,e.form.description]]),d(c,{form:e.form,field:"description"},null,8,["form"])])]),s("div",F,[K,s("div",P,[s("div",T,[(n(!0),a(k,null,y(m.propNames,(i,p)=>(n(),a("div",{key:p,class:"col-md-4 mb-2"},[s("h5",O,l(i),1),(n(!0),a(k,null,y(e.permissions[i],u=>(n(),a("div",{key:u.id},[s("div",A,[f(s("input",{id:"permission_"+p,"onUpdate:modelValue":o[2]||(o[2]=U=>e.form.permission_id=U),class:"form-check-input",type:"checkbox",value:u.id},null,8,G),[[R,e.form.permission_id]]),s("label",{class:"form-check-label",for:"permission_"+p},l(u.name),9,H)])]))),128))]))),128))]),d(c,{form:e.form,field:"permission_id"},null,8,["form"])])]),s("div",I,[s("div",J,[s("button",{class:"btn grey-bg",disabled:e.form.busy},l("Update"),8,Q),s("button",{onClick:o[3]||(o[3]=i=>t.$router.push({name:"role"})),class:"btn black-bg ms-1"},l("Cancel"))])])],32)])])])):(n(),a("div",W,[d(w)]))])):(n(),a("div",X,[d(g)]))}const $=x(S,[["render",Y]]);export{$ as default};
